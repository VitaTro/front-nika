import { Box, Button, Paper, TextField, Typography } from "@mui/material";
import { Chart, registerables } from "chart.js";
import { useEffect, useState } from "react";
import { Line } from "react-chartjs-2"; // üìä –ì—Ä–∞—Ñ—ñ–∫ –ø—Ä–æ–¥–∞–∂—ñ–≤
import { useDispatch, useSelector } from "react-redux";
import Loader from "../../../../../components/Loader";
import {
  fetchFinanceOverview,
  updateFinanceOverview,
} from "../../../../../redux/finance/overview/operationOverview";
import {
  selectCompletedSales,
  selectFinanceError,
  selectFinanceLoading,
  selectFinanceSettings,
  selectFinanceStats,
  selectLowStockItems,
  selectSalesOverview,
} from "../../../../../redux/finance/overview/selectorsOverview";
Chart.register(...registerables);

const FinanceOverview = () => {
  const dispatch = useDispatch();
  const stats = useSelector(selectFinanceStats);
  const salesOverview = useSelector(selectSalesOverview);
  const financeSettings = useSelector(selectFinanceSettings);
  const lowStockItems = useSelector(selectLowStockItems);
  const completedSales = useSelector(selectCompletedSales);
  const isLoading = useSelector(selectFinanceLoading);
  const error = useSelector(selectFinanceError);

  // üî• –õ–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤
  const [updatedSettings, setUpdatedSettings] = useState(financeSettings);

  useEffect(() => {
    dispatch(fetchFinanceOverview());
  }, [dispatch]);

  useEffect(() => {
    console.log("üìä –ü–æ—Ç–æ—á–Ω–∏–π Redux-—Å—Ç–∞–Ω:", {
      stats,
      salesOverview,
      financeSettings,
    });
  }, [stats, salesOverview, financeSettings]);

  const handleUpdateSettings = () => {
    dispatch(updateFinanceOverview(updatedSettings));
  };

  // üî• –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤ –∑–∞ –¥–∞—Ç–æ—é
  const sortedCompletedSales = [...completedSales].sort(
    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)
  );

  if (isLoading) return <Loader />;
  if (error) {
    return (
      <Typography color="error">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: {error}</Typography>
    );
  }

  return (
    <Box sx={{ maxHeight: "85vh", overflowY: "auto", padding: "10px" }}>
      <Typography variant="h4" gutterBottom textAlign="center">
        –§—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –æ–≥–ª—è–¥
      </Typography>

      {/* üîπ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Paper elevation={3} sx={{ padding: "20px", marginBottom: "20px" }}>
        <Typography variant="h6">–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Typography>
        <Typography>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: {stats?.totalUsers ?? "N/A"}</Typography>
        <Typography>–ü—Ä–æ–¥—É–∫—Ç–∏: {stats?.totalProducts ?? "N/A"}</Typography>
        <Typography>
          –û–Ω–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂—ñ: {stats?.totalOnlineSales ?? "N/A"}
        </Typography>
        <Typography>
          –û—Ñ–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂—ñ: {stats?.totalOfflineSales ?? "N/A"}
        </Typography>
      </Paper>

      {/* üîπ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å */}
      <Paper elevation={3} sx={{ padding: "20px", marginBottom: "20px" }}>
        <Typography variant="h6">–§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</Typography>
        <TextField
          label="–ü–æ–¥–∞—Ç–∫–æ–≤–∞ —Å—Ç–∞–≤–∫–∞ (%)"
          type="number"
          value={updatedSettings?.taxRate || ""}
          onChange={(e) =>
            setUpdatedSettings({ ...updatedSettings, taxRate: e.target.value })
          }
        />
        <TextField
          label="–û–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏ (z≈Ç)"
          type="number"
          value={updatedSettings?.operatingCosts || ""}
          onChange={(e) =>
            setUpdatedSettings({
              ...updatedSettings,
              operatingCosts: e.target.value,
            })
          }
        />
        <TextField
          label="–ë—é–¥–∂–µ—Ç –Ω–∞ –∑–∞–∫—É–ø—ñ–≤–ª—é (z≈Ç)"
          type="number"
          value={updatedSettings?.budgetForProcurement || ""}
          onChange={(e) =>
            setUpdatedSettings({
              ...updatedSettings,
              budgetForProcurement: e.target.value,
            })
          }
        />
        <Button
          variant="contained"
          color="primary"
          onClick={handleUpdateSettings}
        >
          –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        </Button>
      </Paper>

      {/* üîπ –û–≥–ª—è–¥ –ø—Ä–æ–¥–∞–∂—ñ–≤ (–∑ –∫–æ–ª—å–æ—Ä–æ–≤–∏–º–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏) */}
      <Paper elevation={3} sx={{ padding: "20px", marginBottom: "20px" }}>
        <Typography variant="h6">–û–≥–ª—è–¥ –ø—Ä–æ–¥–∞–∂—ñ–≤</Typography>
        <Typography
          sx={{ color: salesOverview?.online?.netProfit > 0 ? "green" : "red" }}
        >
          –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ –æ–Ω–ª–∞–π–Ω: {salesOverview?.online?.netProfit ?? "N/A"} z≈Ç
        </Typography>
        <Typography
          sx={{
            color: salesOverview?.offline?.netProfit > 0 ? "green" : "red",
          }}
        >
          –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ –æ—Ñ–ª–∞–π–Ω: {salesOverview?.offline?.netProfit ?? "N/A"}{" "}
          z≈Ç
        </Typography>
      </Paper>

      {/* üîπ –ì—Ä–∞—Ñ—ñ–∫ –¥–∏–Ω–∞–º—ñ–∫–∏ –ø—Ä–æ–¥–∞–∂—ñ–≤ */}
      <Paper elevation={3} sx={{ padding: "20px", marginBottom: "20px" }}>
        <Typography variant="h6">–ì—Ä–∞—Ñ—ñ–∫ –ø—Ä–æ–¥–∞–∂—ñ–≤</Typography>
        <Line
          data={{
            labels: ["–°—ñ—á–µ–Ω—å", "–õ—é—Ç–∏–π", "–ë–µ—Ä–µ–∑–µ–Ω—å", "–ö–≤—ñ—Ç–µ–Ω—å", "–¢—Ä–∞–≤–µ–Ω—å"],
            datasets: [
              {
                label: "–û–Ω–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂—ñ",
                data: [
                  1200,
                  1500,
                  1700,
                  1300,
                  salesOverview?.online?.totalSales || 0,
                ],
                borderColor: "blue",
                backgroundColor: "rgba(0, 0, 255, 0.2)",
              },
              {
                label: "–û—Ñ–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂—ñ",
                data: [
                  1000,
                  1400,
                  1600,
                  1500,
                  salesOverview?.offline?.totalSales || 0,
                ],
                borderColor: "green",
                backgroundColor: "rgba(0, 255, 0, 0.2)",
              },
            ],
          }}
        />
      </Paper>

      {/* üîπ –í–∏–∫–æ–Ω–∞–Ω—ñ –ø—Ä–æ–¥–∞–∂—ñ (–∑ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è–º) */}
      {completedSales.length === 0 ? (
        <Typography variant="h6">–ù–µ–º–∞—î –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤</Typography>
      ) : (
        <Paper
          elevation={3}
          sx={{ padding: "20px", maxHeight: "300px", overflowY: "auto" }}
        >
          <Typography variant="h6">–í–∏–∫–æ–Ω–∞–Ω—ñ –ø—Ä–æ–¥–∞–∂—ñ</Typography>
          {sortedCompletedSales.map((sale, index) => (
            <Typography key={index}>
              {new Date(sale.createdAt).toLocaleDateString()} -{" "}
              {sale.totalPrice} z≈Ç ({sale.paymentMethod})
            </Typography>
          ))}
        </Paper>
      )}
    </Box>
  );
};

export default FinanceOverview;
