import { Typography } from "@mui/material";
import { useState } from "react";
import axios from "../../../../../../redux/axiosConfig";

const OrderForm = ({ cart, setCart }) => {
  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState("cash");

  // ‚úÖ –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ `updateOrderStatus` –ø–µ—Ä–µ–¥ `handleOrder`
  const updateOrderStatus = async (orderId) => {
    try {
      const response = await axios.patch(
        `/api/admin/finance/offline/orders/${orderId}`,
        {
          status: "completed",
        }
      );

      console.log("‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ!", response.data);
      alert("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —è–∫ 'completed'!");
    } catch (error) {
      console.error("üî• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É:", error);
      alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.");
    }
  };

  const handleOrder = async () => {
    if (cart.length === 0) {
      alert("‚ö†Ô∏è –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π! –î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º.");
      return;
    }

    const orderData = {
      products: cart.map(({ productId, name, price, quantity, photoUrl }) => ({
        productId,
        name,
        price,
        quantity,
        photoUrl,
      })),
      totalPrice: cart.reduce(
        (acc, item) => acc + item.price * item.quantity,
        0
      ),
      paymentMethod: selectedPaymentMethod,
      status: "pending",
    };

    try {
      const response = await axios.post(
        "/api/admin/finance/offline/orders",
        orderData
      );
      console.log("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–µ!", response.data);

      const orderId = response.data?.order?._id; // üî• –î–æ–¥–∞—î–º–æ `?`, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ `undefined` –ø–æ–º–∏–ª–∫–∏
      if (!orderId) {
        throw new Error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ `orderId`!");
      }

      // üî• –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      await updateOrderStatus(orderId);

      setCart([]);
      localStorage.removeItem("cart");
    } catch (error) {
      console.error("üî• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", error);
      alert("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–∏–π–Ω—è–≤ –∑–∞–ø–∏—Ç. –ü–µ—Ä–µ–≤—ñ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–∏—Ö.");
    }
  };

  return (
    <div style={{ textAlign: "center", padding: "16px" }}>
      <Typography variant="h6" sx={{ fontWeight: "bold", color: "#1976D2" }}>
        üí∞ –°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏
      </Typography>
      <select
        value={selectedPaymentMethod}
        onChange={(e) => setSelectedPaymentMethod(e.target.value)}
        style={{
          width: "100%",
          padding: "10px",
          fontSize: "16px",
          borderRadius: "5px",
          border: "2px solid #1976D2",
          cursor: "pointer",
          marginBottom: "12px",
        }}
      >
        <option value="cash">–ì–æ—Ç—ñ–≤–∫–∞</option>
        <option value="bank_transfer">–ë–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –ø–µ—Ä–µ–∫–∞–∑</option>
      </select>
      <button
        onClick={handleOrder}
        style={{
          backgroundColor: "#4CAF50",
          color: "white",
          fontSize: "16px",
          padding: "10px 20px",
          borderRadius: "5px",
          border: "none",
          cursor: "pointer",
          fontWeight: "bold",
          transition: "0.3s",
        }}
        onMouseOver={(e) => (e.target.style.backgroundColor = "#45A049")}
        onMouseOut={(e) => (e.target.style.backgroundColor = "#4CAF50")}
      >
        ‚úÖ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      </button>
    </div>
  );
};

export default OrderForm;
