import React, { useEffect, useState } from "react";
import { useTranslation } from "react-i18next";
import { useDispatch, useSelector } from "react-redux";
import {
  addProductToWishlist,
  removeProductFromWishlist,
} from "../../redux/wishlist/operationWishlist";
import { selectWishlistProducts } from "../../redux/wishlist/selectorsWishlist";
import ProductImageWithLightbox from "../ProductImageWithLightbox";
import {
  ButtonHeart,
  ButtonQuantity,
  ButtonShopping,
  ProductAction,
  ProductCardContainer,
  ProductsHeader,
} from "./ProductsCard.styled";

const ProductsCard = ({ product }) => {
  const [productCount, setProductCount] = useState(1); // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç—É
  const [isActive, setIsActive] = useState(false); // –°—Ç–∞—Ç—É—Å "–í –±–∞–∂–∞–Ω–æ–º—É"
  const dispatch = useDispatch();
  const { t } = useTranslation();
  const wishlist = useSelector(selectWishlistProducts);
  const [localIsActive, setLocalIsActive] = useState(null);

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—Ä–æ–¥—É–∫—Ç —É —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å
  const isProductInWishlist =
    Array.isArray(wishlist) &&
    wishlist.some((wishlistProduct) => wishlistProduct._id === product._id);

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É –∑ Redux
  useEffect(() => {
    setLocalIsActive(isProductInWishlist); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É "—Å–µ—Ä–¥–µ—á–∫–∞"
  }, [isProductInWishlist]);

  // –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—É –Ω–∞ —Å–µ—Ä–¥–µ—á–∫–æ
  const handleToggleWishlist = async () => {
    try {
      setLocalIsActive((prevState) => !prevState);
      console.log("Before toggle:", isActive); // –õ–æ–≥ —Å—Ç–∞–Ω—É –¥–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
      if (isProductInWishlist) {
        await dispatch(removeProductFromWishlist(product._id));
      } else {
        await dispatch(addProductToWishlist(product));
      }
      // setIsActive(!isActive);
      console.log("After toggle:", !isActive); // –õ–æ–≥ —Å—Ç–∞–Ω—É –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
    } catch (error) {
      console.error("Error toggling wishlist:", error);
    }
  };

  return (
    <ProductCardContainer>
      <ProductsHeader>{product.name}</ProductsHeader>
      {product.photoUrl ? (
        <ProductImageWithLightbox src={product.photoUrl} alt={product.name} />
      ) : (
        <div>{t("no_image")}</div>
      )}
      <p>{product.price} z≈Ç</p>
      <ProductAction>
        <ButtonHeart
          onClick={handleToggleWishlist}
          $isActive={localIsActive} // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Å—Ç–∞—Ç—É—Å—É
        >
          {localIsActive ? "‚ù§Ô∏è" : "üñ§"}
        </ButtonHeart>
        <div>
          <ButtonQuantity
            onClick={
              () => setProductCount((c) => Math.max(c - 1, 1)) // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî 1
            }
          >
            ‚ûñ
          </ButtonQuantity>
          <span>{productCount}</span>
          <ButtonQuantity onClick={() => setProductCount((c) => c + 1)}>
            ‚ûï
          </ButtonQuantity>
        </div>
        <ButtonShopping onClick={() => {}}>üõí</ButtonShopping>
      </ProductAction>
    </ProductCardContainer>
  );
};

export default ProductsCard;
