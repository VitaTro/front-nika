import { createAsyncThunk } from "@reduxjs/toolkit";
import axios from "../../axiosConfig";

export const fetchStockMovements = createAsyncThunk(
  "stockMovement/fetchStockMovements",
  async (_, { rejectWithValue }) => {
    try {
      const res = await axios.get("/api/admin/stock/movement");
      return res.data;
    } catch (err) {
      console.error("üî¥ API ERROR:", err.response?.data || err.message);
      return rejectWithValue(
        err.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä—É—Ö–∏"
      );
    }
  }
);

// ‚úÖ –ó–≤–∏—á–∞–π–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ä—É—Ö—É
export const uploadSingleMovement = createAsyncThunk(
  "stockMovement/uploadSingleMovement",
  async (movementData, { rejectWithValue }) => {
    try {
      // üì¶ –§–æ—Ä–º—É—î–º–æ —á–∏—Å—Ç–∏–π payload –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ä—É—Ö—É –∑ —Ñ—Ä–æ–Ω—Ç—É
      const payload = {
        productIndex: movementData.productIndex,
        productName: movementData.productName,
        type: movementData.type,
        quantity: Number(movementData.quantity),
        unitPurchasePrice: Number(movementData.unitPurchasePrice),
        price: Number(movementData.price),
        note: movementData.note,
        date: movementData.date || new Date().toISOString(),
      };

      console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä—É—Ö—É:", payload); // ‚úÖ debug log

      const response = await axios.post("/api/admin/stock/movement", payload);
      return response.data.movement;
    } catch (error) {
      console.error("‚ùå Error uploading movement:", error);
      return rejectWithValue(
        error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ä—É—Ö"
      );
    }
  }
);

export const updateMovement = createAsyncThunk(
  "stock/updateMovement",
  async ({ id, updates }, { rejectWithValue }) => {
    try {
      const response = await axios.put(
        `/api/admin/stock/movement/${id}`,
        updates
      );
      return response.data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Å"
      );
    }
  }
);
export const fetchStockSummary = createAsyncThunk(
  "stockMovement/fetchStockSummary",
  async (productIndex, { rejectWithValue }) => {
    try {
      const response = await axios.get(
        `/api/admin/stock/movement/index/${productIndex}/summary`
      );
      if (!response.data) {
        return rejectWithValue({
          productIndex,
          error: "–°–∞–º–º–µ—Ä—ñ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ",
        });
      }
      return { productIndex, data: response.data };
    } catch (error) {
      console.error("üî¥ Summary ERROR:", error.response?.data || error.message);
      return rejectWithValue({
        productIndex,
        error: error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–∞–º–º–µ—Ä—ñ",
      });
    }
  }
);

export const deleteMovement = createAsyncThunk(
  "stock/deleteMovement",
  async (id, { rejectWithValue }) => {
    try {
      const response = await axios.delete(`/api/admin/stock/movement/${id}`);
      return { id, message: response.data.message };
    } catch (error) {
      return rejectWithValue(
        error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å"
      );
    }
  }
);
export const fetchProductMovements = createAsyncThunk(
  "stockMovement/fetchProductMovements",
  async (productIndex, { rejectWithValue }) => {
    try {
      const response = await axios.get(
        `/api/admin/stock/movement/product/${productIndex}`
      );
      return { productIndex, data: response.data };
    } catch (error) {
      console.error(
        "üî¥ Error fetching product movements:",
        error.response?.data || error.message
      );
      return rejectWithValue({
        productIndex,
        error: error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä—É—Ö–∏ —Ç–æ–≤–∞—Ä—É",
      });
    }
  }
);

export const fetchProductSummary = createAsyncThunk(
  "stockMovement/fetchProductSummary",
  async (productIndex, { rejectWithValue }) => {
    try {
      const res = await axios.get(
        `/api/admin/stock/movement/index/${productIndex}/summary`
      );
      return { productIndex, data: res.data };
    } catch (err) {
      console.error("‚ùå Summary fetch error:", err.message);
      return rejectWithValue(err.message);
    }
  }
);
