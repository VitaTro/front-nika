import { createAsyncThunk } from "@reduxjs/toolkit";
import axios from "../axiosConfig";

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const fetchUserMain = createAsyncThunk(
  "user/fetchMain",
  async (_, { rejectWithValue }) => {
    try {
      const { data } = await axios.get("/api/user/main");
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –æ—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const fetchUserInfo = createAsyncThunk(
  "user/fetchInfo",
  async (_, { rejectWithValue }) => {
    try {
      const { data } = await axios.get("/api/user/profile/info");
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);

// ‚úÖ –û–Ω–æ–≤–∏—Ç–∏ –æ—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const updateUserInfo = createAsyncThunk(
  "user/updateInfo",
  async (userData, { rejectWithValue }) => {
    try {
      const { data } = await axios.put("/api/user/profile/info", userData);
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–¥—Ä–µ—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const fetchUserAddress = createAsyncThunk(
  "user/fetchAddress",
  async (_, { rejectWithValue }) => {
    try {
      const { data } = await axios.get("/api/user/profile/address");
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);

// ‚úÖ –û–Ω–æ–≤–∏—Ç–∏ –∞–¥—Ä–µ—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const updateUserAddress = createAsyncThunk(
  "user/updateAddress",
  async (addressData, { rejectWithValue }) => {
    try {
      const { data } = await axios.put(
        "/api/user/profile/address",
        addressData
      );
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);

// ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const deleteUserAccount = createAsyncThunk(
  "user/deleteAccount",
  async (_, { rejectWithValue }) => {
    try {
      const { data } = await axios.delete("/api/user/profile");
      return data;
    } catch (error) {
      return rejectWithValue(error.response.data);
    }
  }
);
// ‚úÖ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
export const sendAdminMessage = createAsyncThunk(
  "user/sendAdminMessage",
  async ({ subject, message }, { rejectWithValue }) => {
    try {
      const { data } = await axios.post("/api/user/profile/email", {
        subject,
        message,
      });
      return data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data?.error || "Error sending message"
      );
    }
  }
);

// ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤
export const fetchRecentViews = createAsyncThunk(
  "user/fetchRecentViews",
  async (_, { rejectWithValue }) => {
    try {
      const { data } = await axios.get("/api/user/recent");
      return data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data?.error || "Error fetching recent views"
      );
    }
  }
);

export const getUserProducts = createAsyncThunk(
  "products/getUserProducts",
  async (_, thunkAPI) => {
    try {
      const token = localStorage.getItem("accessToken");
      const response = await axios.get("/api/user/products", {
        headers: { Authorization: `Bearer ${token}` },
      });

      console.log("üîÑ API Response in getUserProducts:", response.data);
      return response.data; // ‚úÖ –¢–µ–ø–µ—Ä –¥–∞–Ω—ñ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è —É Redux!
    } catch (error) {
      console.error("‚ùå Error fetching products:", error);
      return thunkAPI.rejectWithValue(
        error.response?.data || "Unexpected error"
      );
    }
  }
);
